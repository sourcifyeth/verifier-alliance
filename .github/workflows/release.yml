# Only for publishing the pullFromVera service

name: Release on Google Cloud Run

on:
  push:
    branches:
      - master
      - staging

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: sourcifyeth/vera-pulling-sync-service
  GCP_PROJECT: sourcify-project
  WORKLOAD_IDENTITY_PROVIDER: projects/1019539084286/locations/global/workloadIdentityPools/github/providers/sourcify
  SERVICE_ACCOUNT: sourcify-cloud-run-deployer@sourcify-project.iam.gserviceaccount.com
  SERVICE_NAME: sourcify-${{ github.ref_name == 'master' && 'production' || github.ref_name }}-vera-pulling-sync-service
  REGION: europe-west1
  GCP_REPOSITORY: ghcr

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write
      attestations: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to the Container registry
        uses: docker/login-action@65b78e6e13532edd9afa3aa52ac7964289d1a9c1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@f2a1d5e99d037542a71f64918e516c093c6f3fc4
        with:
          context: .
          file: ./Dockerfile.pullFromVera
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}

      - name: Generate artifact attestation
        uses: actions/attest-build-provenance@v1
        with:
          subject-name: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME}}
          subject-digest: ${{ steps.push.outputs.digest }}
          push-to-registry: true

      - name: "auth GCP"
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Install gcloud alpha components
        run: gcloud components install alpha --quiet

      - name: Deploy to Cloud Run
        run: |
          gcloud alpha run worker-pools deploy ${{ env.SERVICE_NAME }} \
            --image=${{ env.REGION }}-docker.pkg.dev/${{ env.GCP_PROJECT }}/${{ env.GCP_REPOSITORY }}/${{ env.IMAGE_NAME }}:${{ github.ref_name }}@${{ steps.push.outputs.digest }} \
            --region=${{ env.REGION }} \
            --project=${{ env.GCP_PROJECT }} 
